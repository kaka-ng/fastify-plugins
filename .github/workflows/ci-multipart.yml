name: Continuous Integration - Multipart

on:
  push:
    paths:
      - ".github/workflows/ci-multipart.yml"
      - "packages/multipart/**"
  pull_request:
    paths:
      - ".github/workflows/ci-multipart.yml"
      - "packages/multipart/**"
    
jobs:
  dependency-review:
    name: Dependency Review
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Dependency review
        uses: actions/dependency-review-action@v3

  license-check:
    name: Check Licenses
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm i --ignore-scripts

      - name: Check Licenses
        run: npx license-checker --production --onlyAllow="BSD-2-Clause;BSD-3-Clause;ISC;MIT;GPL-3.0"

  linter:
    name: Lint Code
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Lint code
        run: pnpm --filter "./packages/multipart" run lint

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    strategy:
      matrix:
        node-version: [18, 20]
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-${{ matrix.node-version }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Run tests
        run: pnpm --filter "./packages/multipart" run test

  automerge:
    name: Automerge Dependabot PRs
    if: >
      github.event_name == 'pull_request' &&
      github.event.pull_request.user.login == 'dependabot[bot]'
    needs: test
    permissions:
      pull-requests: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: fastify/github-action-merge-dependabot@v3
        with:
          exclude: ${{ inputs.auto-merge-exclude }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          target: major
